// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BloodDonationSystem.Repositories.HungHK.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace BloodDonationSystem.Repositories.HungHK.DBContext;

public partial class SE1725_PRN232_SE170547_G5_BloodDonationSystemContext : DbContext
{
    public SE1725_PRN232_SE170547_G5_BloodDonationSystemContext()
    {
    }

    public SE1725_PRN232_SE170547_G5_BloodDonationSystemContext(DbContextOptions<SE1725_PRN232_SE170547_G5_BloodDonationSystemContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ReportTypesHungHk> ReportTypesHungHks { get; set; }

    public virtual DbSet<ReportsHungHk> ReportsHungHks { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-MQ0K2RJ;Initial Catalog=SE1725_PRN232_SE170547_G5_BloodDonationSystem;Integrated Security=True;Encrypt=True");

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ReportTypesHungHk>(entity =>
        {
            entity.HasKey(e => e.ReportTypeHungHkid).HasName("PK__ReportTy__D9ADD9CD7F82EDC7");

            entity.ToTable("ReportTypesHungHK");

            entity.Property(e => e.ReportTypeHungHkid).HasColumnName("ReportTypeHungHKID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<ReportsHungHk>(entity =>
        {
            entity.HasKey(e => e.ReportHungHkid).HasName("PK__ReportsH__BE234B2678C7B3B6");

            entity.ToTable("ReportsHungHK");

            entity.Property(e => e.ReportHungHkid).HasColumnName("ReportHungHKID");
            entity.Property(e => e.MostNeededBloodType).HasMaxLength(10);
            entity.Property(e => e.ReportTypeId).HasColumnName("ReportTypeID");

            entity.HasOne(d => d.GeneratedByNavigation).WithMany(p => p.ReportsHungHks)
                .HasForeignKey(d => d.GeneratedBy)
                .HasConstraintName("FK__ReportsHu__Gener__70DDC3D8");

            entity.HasOne(d => d.ReportType).WithMany(p => p.ReportsHungHks)
                .HasForeignKey(d => d.ReportTypeId)
                .HasConstraintName("FK__ReportsHu__Repor__6FE99F9F");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId);

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}